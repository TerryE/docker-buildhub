#! /bin/bash


SCRIPT_PATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
HOST_ROOT="$( cd $(dirname "$0")/..>/dev/null 2>&1 ; pwd -P )"
FORCE=$([ "$1" == "-f" ] && echo Y)

check_reader_intalled () {
  [[ -f /etc/systemd/system/docker-callback-reader.service ]] && return
  sudo cp $HOST_ROOT/extension/conf/docker-callback-reader.service /etc/systemd/system/
  sudo cp $HOST_ROOT/extension/bin/docker-callback-reader /usr/local/sbin/
  sudo systemctl daemon-reload
  sudo systemctl enable docker-callback-reader
  sudo systemctl start  docker-callback-reader
}


# Build the extra image.  This is skipped if the image exists unless "-f" is specified

build_extra() {
  local repo="$1" ver="$2" repo_ver="$2-$3"
  local tag="$repo_ver" ; tag=${tag%-}
  local target="${repo}:${tag}"
  local -u VNAME="${repo}_VER"
  local id=$(docker images $target --format '{{.ID}}')

  # skip if image already build unless -f option set
  [ -n "$id" ] && [ -z "$FORCE"  ] && return 0
  [ -n "$id" ] && docker rmi $target
  
  echo "Entering build $target $VNAME=$ver"
  docker build \
    -f $SCRIPT_PATH/${repo}-dockerfile \
    -t $target                         \
    --build-arg $VNAME=$ver            \
    $SCRIPT_PATH > /tmp/${repo}-${ver}.log
  echo "Build of $target completed. See /tmp/${repo}-${ver}.log for details."

  tail -2 /tmp/${repo}-${ver}.log
}

check_reader_intalled

build_extra alpine  3.15     extended
