services:

  # All containers use the same image that is based in a standard Debian slim image
  # that has been extended to include the packages needed for all service.
  #
  # Some directories are routinely accessed by the admins and these are bound to the
  # relevant host directory, including ${IPB_ROOT}, /backups and data/log.
  #
  # All containers bind service/<service>/bin to /usr/local/sbin and this directoy must
  # contain the script docker-entrypoint.sh which is used to startup the container.
  # Each container can also binds to /usr/local/conf, if needed.
  #
  # The mysql data directories is mounted as a persistent docker volumes.
  
  # MariaDB service
  mysql:
    image: debian:${DEBIAN_VERSION}-extended
    hostname: mysql
    container_name: ${VHOST}_mysql
    # this doesn't depend on other services, so it is used to build the debian image.
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DEBIAN_VERSION: ${DEBIAN_VERSION}
    # restart: on-failure
    volumes:
      - ./target-sbin:/usr/local/sbin:ro
      - ./service/mysql/bin:/usr/local/bin:ro
      - ./service/mysql/conf:/usr/local/conf:ro
      - mysql_data:/var/lib/mysql
      - ./data/log:/var/log
      - ./data/run:/run
      - /backups:/backups
    environment:
      TZ: ${TZ}
      VHOST: ${VHOST}
    security_opt:
      - seccomp:unconfined

  # PHP FPM Service
  php:
    image: debian:${DEBIAN_VERSION}-extended
    hostname: php
    container_name: ${VHOST}_php
    depends_on:
      - mysql
    # restart: on-failure
    volumes:
      - ./target-sbin:/usr/local/sbin:ro
      - ./service/php/bin:/usr/local/bin:ro
      - ./service/php/conf:/usr/local/conf:ro
      - ${IPB_ROOT}:/var/www/ipb
      - ./data/log:/var/log
      - ./data/run:/run
    secrets:
      - forum-token
      - redis-pwd
    environment:
      VHOST: ${VHOST}
      PHP_VERSION: ${PHP_VERSION}

  # Apache2.4 Service
  apache2:
    image: debian:${DEBIAN_VERSION}-extended
    hostname: apache2
    container_name: ${VHOST}_apache2
    depends_on:
      - php
    # restart: on-failure
    volumes:
      - ./target-sbin:/usr/local/sbin:ro
      - ./service/apache2/bin:/usr/local/bin:ro
      - ./service/apache2/conf:/usr/local/conf:ro
      - ${IPB_ROOT}:/var/www/ipb
      - ./data/etc/letsencrypt:/etc/letsencrypt
      - ./data/log:/var/log
      - ./data/run:/run
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    environment:
      VHOST: ${VHOST}
      DOMAIN: ${DOMAIN}
      HTTPS_PORT: ${HTTPS_PORT}
      APACHE_LOG_DIR: /var/log/apache2
      PHP_VERSION: ${PHP_VERSION}

  # Cron Service used to schedule event-based housekeeping
  scheduler:
    image: debian:${DEBIAN_VERSION}-extended
    hostname: scheduler
    container_name: ${VHOST}_scheduler
    domainname: buildhub.local
    depends_on:
      - apache2
      - mysql
    volumes:
      - ./target-sbin:/usr/local/sbin:ro
      - ./service/scheduler/bin:/usr/local/bin:ro
      - ./service/scheduler/conf:/usr/local/conf:ro
      - ${IPB_ROOT}:/var/www/ipb
      - ./data/log:/var/log
      - ./data/run:/run
      - /run/docker.sock:/run/docker.sock
      - /backups:/backups
    # restart: on-failure
    environment:
      VHOST: ${VHOST}

  # SSHD Service for off-siting of system backups
  sshd:
    image: debian:${DEBIAN_VERSION}-extended
    hostname: sshd
    container_name: ${VHOST}_sshd
    depends_on:
      - mysql
    # restart: on-failure
    volumes:
      - ./target-sbin:/usr/local/sbin:ro
      - ./service/sshd/bin:/usr/local/bin:ro
      - /etc/ssh:/usr/local/conf:ro
      - /backups:/backups
      - ./data/log:/var/log
      - ./data/run:/run
    ports:
      - "${SSH_PORT}:22"
    environment:
      VHOST: ${VHOST}
    secrets:
      - authorized_keys

  redis:
    image: debian:${DEBIAN_VERSION}-extended
    hostname: redis
    container_name: ${VHOST}_redis
    depends_on:
      - mysql
    # restart: on-failure
    volumes:
      - ./target-sbin:/usr/local/sbin:ro
      - ./service/redis/bin:/usr/local/bin:ro
      - redis_data:/var/lib/redis
      - ./data/log:/var/log
      - ./data/run:/run
    secrets:
      - redis-pwd

secrets:
  authorized_keys:
    file: .secrets/authorized_keys
  redis-pwd:
    file: .secrets/redis-pwd
  forum-token:
    file: .secrets/forum-token

volumes:
  mysql_data:
    external: true
    name: ${VHOST}_mysql_data
  redis_data:
    external: true
    name: ${VHOST}_redis_data
